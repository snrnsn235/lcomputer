<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
   <!-- logback-classic 모듈은 주기적으로 configuration 파일을 읽어 Logback의 설정을 재구성할 수 
		있습니다. 이는 Application이 동작 중일 때 재시작 없이 설정 파일을 수정하고 적용할 수 있는 장점이 있습니다. 자동으로 
		Logback 설정 재구성을 위해 configuration 디렉티브에 scan="true" 속성을 추가합니다. 기본으로 적용되는 scan 
		주기는 1분입니다. scan주기는 scanPeriod 속성을 이용하여 지정해줄 수 있습니다. -->
   <!-- console 로그 설정 -->
   <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
      <encoder>
         <pattern>%d{HH:mm:ss.SSS} %highlight([%-5level]) --- [%thread] %logger{35} : %msg %n</pattern>
      </encoder>
   </appender>
   
   <!-- 로그 파일로 남기는 설정 -->
   <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
         <fileNamePattern>C:\sts-logs\logback-%d{yyyy-MM-dd}.log.zip</fileNamePattern>
         <maxHistory>7</maxHistory>
      </rollingPolicy>
      <encoder>
         <pattern>%d{HH:mm:ss.SSS} %-5level --- [%thread] %logger{35} : %msg %n</pattern>
      </encoder>
   </appender>
<!-- 설정한 로그 등록  -->
   
   <!-- mapper 패키지  -->   
   <logger name="com.lcomputerstudy.example.mapper" level="TRACE" additivity="false">
      <appender-ref ref="FILE" />
      <appender-ref ref="STDOUT" />
   </logger>
   <!-- // mapper 패키지  -->
   
   
   <logger name="com.lcomputerstudy.example" level="DEBUG" additivity="false">
      <appender-ref ref="FILE" />
      <appender-ref ref="STDOUT" />
   </logger>
   
    <logger name="org.springframework.web" level="WARN" additivity="false">
      <appender-ref ref="FILE" />
      <appender-ref ref="STDOUT" />
   </logger>
   
   <root level="WARN">
      <appender-ref ref="FILE" />
      <appender-ref ref="STDOUT" />
   </root>
<!-- //설정한 로그 등록  -->
</configuration>

